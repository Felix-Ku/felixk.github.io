<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Onism</title>
  
  <subtitle>Felix&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-03-26T13:56:36.848Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>FelixK</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django</title>
    <link href="http://yoursite.com/2021/02/26/Django%20basics%20/"/>
    <id>http://yoursite.com/2021/02/26/Django%20basics%20/</id>
    <published>2021-02-26T12:20:29.000Z</published>
    <updated>2021-03-26T13:56:36.848Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="hello-django">Hello Django</span></h2><p>A tiny documentation to remind myself the basics of Django.</p><h2><span id="setup">Setup</span></h2><ul><li>Name of your app = APPNAME</li><li>Name of your base project = PROJECTNAME</li></ul><h3><span id="setting-up-environment">Setting up environment</span></h3><pre class=" language-bash"><code class="language-bash">pipenv <span class="token function">install</span> django~<span class="token operator">=</span>3.1.5pipenv shell</code></pre><pre class=" language-python"><code class="language-python">django<span class="token operator">-</span>admin startproject PROJECTNAME_configcd PROJECTNAME_configpython manage<span class="token punctuation">.</span>py startapp APPNAME</code></pre><h3><span id="register-app-in-settings">Register app in settings</span></h3><p>Register class: PROJECT\apps.py “config class”<br>Register location: config\settings.py[INSTALLED_APPS]</p><p>e.g. “PROJECTNAME.apps.CLASS_NAME”</p><h3><span id="setting-up-models">Setting up models</span></h3><p>Taget file: PROJECT\models.py<br>Add class of tables for database:</p><pre class=" language-python"><code class="language-python">    <span class="token keyword">class</span> <span class="token class-name">Customer</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>        price <span class="token operator">=</span> models<span class="token punctuation">.</span>DecimalField<span class="token punctuation">(</span>max_digits<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> decimal_places<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        time <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># Add string functions to models</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>name</code></pre><h3><span id="applying-models">Applying models</span></h3><pre class=" language-python"><code class="language-python">python manage<span class="token punctuation">.</span>py makemigrations PROJECT_NAMEpython manage<span class="token punctuation">.</span>py migrate</code></pre><h3><span id="setting-admin-credentials">Setting Admin credentials</span></h3><pre class=" language-python"><code class="language-python">python manage<span class="token punctuation">.</span>py createsuperuser</code></pre><p>Taget file: PROJECT\admin.py<br>Add:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> <span class="token operator">*</span>admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>Model_Class_Name<span class="token punctuation">)</span></code></pre><h3><span id="implement-view">Implement view</span></h3><p>Taget file: PROJECT\admin.py<br>Add:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> djang<span class="token punctuation">.</span>http <span class="token keyword">import</span> HttpResponse    <span class="token comment" spellcheck="true"># Create your views here.</span>    <span class="token keyword">def</span> <span class="token function">myView</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> HttpResponse<span class="token punctuation">(</span><span class="token string">"Hello, user!"</span><span class="token punctuation">)</span></code></pre><h3><span id="setting-template-locations">Setting template locations</span></h3><p>Taget file: CONFIG\settings.py<br>Add:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os</code></pre><p>Update:</p><pre class=" language-python"><code class="language-python">TEMPLATES <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token string">'DIRS'</span><span class="token punctuation">:</span><span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'templates'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># BASE_DIR\templates\</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span></code></pre><h3><span id="create-template-html">Create template html</span></h3><p>Target folder: BASE_DIR\templates<br>Create: html files for index page and so on</p><h3><span id="defined-class-based-view">Defined class-based view</span></h3><p>Taget file: PROJECT\views.py<br>Add:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>views<span class="token punctuation">.</span>generic <span class="token keyword">import</span> TemplateView<span class="token keyword">from</span> PROJECT<span class="token punctuation">.</span>models <span class="token keyword">import</span> TABLE_CLASS<span class="token punctuation">,</span> TABLE_CLASS<span class="token keyword">class</span> <span class="token class-name">CLASS_NAME</span><span class="token punctuation">(</span>TemplateView<span class="token punctuation">)</span><span class="token punctuation">:</span></code></pre><h3><span id="setting-url-dispatcher">Setting URL dispatcher</span></h3><p>Taget file: CONFIG\urls.py<br>Add:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> include<span class="token punctuation">,</span> pathurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>            path<span class="token punctuation">(</span><span class="token string">"admin/"</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>            path<span class="token punctuation">(</span><span class="token string">"PROJECT/"</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">"PROJECT.urls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span></code></pre><p>Create PROJECT\urls.py</p><h2><span id="forms">Forms</span></h2><h3><span id="drop-down-box-form">Drop-down box form</span></h3><h3><span id="dialog-box-input-form">Dialog box input form</span></h3><h2><span id="deploying-to-cloud">Deploying to cloud</span></h2><h3><span id="heroku-setup">Heroku setup</span></h3><h3><span id="deployment">Deployment</span></h3><p>Deploying:</p><pre class=" language-git"><code class="language-git">git add .; git commit -m <span class="token string">"add requirements.txt"</span>; git push heroku mastergit commit -am <span class="token string">"xxxyyzzz"</span>    git push heroku master</code></pre><p>Check log: </p><pre class=" language-base"><code class="language-base">heroku logs --tail</code></pre><p>Testing local heroku:</p><pre class=" language-python"><code class="language-python">pipenv shellheroku run python manage<span class="token punctuation">.</span>py runserver</code></pre><h2><span id="switch-database">Switch database</span></h2><h3><span id="postgresql">PostgreSQL</span></h3><h3><span id="sql-lite">Sql lite</span></h3><h2><span id="useful-commands">Useful commands</span></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;hello-django&quot;&gt;Hello Django&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;A tiny documentation to remind myself the basics of Django.&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;setup&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="django" scheme="http://yoursite.com/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>SQL</title>
    <link href="http://yoursite.com/2021/01/17/SQL%20basics/"/>
    <id>http://yoursite.com/2021/01/17/SQL%20basics/</id>
    <published>2021-01-17T06:51:52.000Z</published>
    <updated>2021-03-26T13:56:32.224Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="hello-sql">Hello SQL</span></h2><p>A tiny documentation to remind myself the basics of SQL.</p><h2><span id="dbms">DBMS</span></h2><h3><span id="components">Components</span></h3><pre class=" language-sql"><code class="language-sql">\\\</code></pre><h3><span id="concepts">Concepts</span></h3><ul><li>Data abstraction</li><li>Data modeling</li><li>Database language</li></ul><h3><span id="file-system-vs-dbms">File system vs DBMS</span></h3><pre class=" language-sql"><code class="language-sql">\\\</code></pre><h2><span id="database-logics">Database logics</span></h2><pre class=" language-sql"><code class="language-sql">\\\</code></pre><h2><span id="sql-query">SQL query</span></h2><p>The following contents are mainly based on MySQL</p><pre class=" language-sql"><code class="language-sql">\\\</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;hello-sql&quot;&gt;Hello SQL&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;A tiny documentation to remind myself the basics of SQL.&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;dbms&quot;&gt;DBMS&lt;/span
      
    
    </summary>
    
    
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Agile software development</title>
    <link href="http://yoursite.com/2020/12/25/Agile%20software%20development/"/>
    <id>http://yoursite.com/2020/12/25/Agile%20software%20development/</id>
    <published>2020-12-25T12:42:33.000Z</published>
    <updated>2021-03-26T13:51:18.264Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="agile-software-development">Agile software development</span></h2><p>Reference: COMP3297 HKU Software Engineering<br>Course info: <a href="https://www.cs.hku.hk/index.php/programmes/course-offered?infile=2019/comp3297.html" target="_blank" rel="noopener">Reference</a></p><p>Post status: Private </p><h2><span id="basics">Basics</span></h2><pre class=" language-python"><code class="language-python">\\\ PRIVATE \\\</code></pre><h3><span id="project-cycles">Project cycles</span></h3><pre class=" language-python"><code class="language-python">\\\ PRIVATE \\\</code></pre><h3><span id="software-process">Software process</span></h3><pre class=" language-python"><code class="language-python">\\\ PRIVATE \\\</code></pre><h3><span id="agile-manifesto">Agile Manifesto</span></h3><pre class=" language-python"><code class="language-python">\\\ PRIVATE \\\</code></pre><h2><span id="scrum">Scrum</span></h2><pre class=" language-python"><code class="language-python">\\\ PRIVATE \\\</code></pre><h2><span id="prototyping">Prototyping</span></h2><pre class=" language-python"><code class="language-python">\\\ PRIVATE \\\</code></pre><h2><span id="user-requirements">User requirements</span></h2><pre class=" language-python"><code class="language-python">\\\ PRIVATE \\\</code></pre><p>View the post from private blog terminal</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;agile-software-development&quot;&gt;Agile software development&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Reference: COMP3297 HKU Software Engineering&lt;br&gt;Course in
      
    
    </summary>
    
    
    
      <category term="Agile" scheme="http://yoursite.com/tags/Agile/"/>
    
      <category term="Scrum" scheme="http://yoursite.com/tags/Scrum/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode trial (Q12)</title>
    <link href="http://yoursite.com/2020/10/24/Daily%20LEET%20(Q12)/"/>
    <id>http://yoursite.com/2020/10/24/Daily%20LEET%20(Q12)/</id>
    <published>2020-10-24T12:47:46.000Z</published>
    <updated>2021-03-26T13:41:06.588Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="leetcode-trial-q12-integer-to-roman">LeetCode trial - Q12 (Integer to Roman)</span></h1><p>2020-06-25</p><p><a href="https://leetcode.com/problems/integer-to-roman/" target="_blank" rel="noopener">Link to Question</a></p><ul><li>Objective: To convert integer into Roman Numeral</li><li>Level of difficulty: Medium</li><li>Language used: C++</li></ul><h2><span id="result">Result</span></h2><h3><span id="first-trial">First trial</span></h3><ul><li>Runtime: 12 ms <em>(faster than 70.86%)</em> <em>For reference only</em></li><li>Memory Usage: 5.9 MB <em>(less than 89.33%)</em> <em>For reference only</em></li></ul><h3><span id="second-trial">Second trial</span></h3><p>More intuitive method</p><ul><li>Runtime: 8 ms <em>(faster than 88.34%)</em> <em>For reference only</em></li><li>Memory Usage: 6 MB <em>(less than 78.85%)</em> <em>For reference only</em></li></ul><h2><span id="code">Code</span></h2><h3><span id="first-trial">First trial</span></h3><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    string <span class="token function">intToRoman</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>        string output<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> value<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">900</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        string valueS<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"M"</span><span class="token punctuation">,</span><span class="token string">"CM"</span><span class="token punctuation">,</span><span class="token string">"D"</span><span class="token punctuation">,</span><span class="token string">"CD"</span><span class="token punctuation">,</span><span class="token string">"C"</span><span class="token punctuation">,</span><span class="token string">"XC"</span><span class="token punctuation">,</span><span class="token string">"L"</span><span class="token punctuation">,</span><span class="token string">"XL"</span><span class="token punctuation">,</span><span class="token string">"X"</span><span class="token punctuation">,</span><span class="token string">"IX"</span><span class="token punctuation">,</span><span class="token string">"V"</span><span class="token punctuation">,</span><span class="token string">"IV"</span><span class="token punctuation">,</span><span class="token string">"I"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count<span class="token operator">=</span>num<span class="token punctuation">;</span>        <span class="token keyword">int</span> pos<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>count<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token operator">>=</span>value<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                count<span class="token operator">=</span>count<span class="token operator">-</span>value<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span>valueS<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>                pos<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> output<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3><span id="second-trial">Second trial</span></h3><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    string <span class="token function">intToRoman</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>        string output<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>num<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">1000</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-1000</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"M"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">900</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-900</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"CM"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">500</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-500</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"D"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">400</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-400</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"CD"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">100</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-100</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"C"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">90</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-90</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"XC"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">50</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-50</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"L"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">40</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-40</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"XL"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-10</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"X"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">9</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-9</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"IX"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">5</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-5</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"V"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">4</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-4</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"IV"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>            <span class="token punctuation">{</span>                num<span class="token operator">=</span>num<span class="token number">-1</span><span class="token punctuation">;</span>                output<span class="token operator">=</span>output<span class="token operator">+</span><span class="token string">"I"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> output<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2><span id="notes">Notes</span></h2><ul><li>Kinda like brutal force</li><li>After observation, Roman numerals changes representation method while:<ul><li>Changes from adding up into substracting down</li><li>4 -&gt; IV</li><li>9 -&gt; IX</li><li>40 -&gt; XL</li><li>90 -&gt; XC</li><li>400 -&gt; CD</li><li>900 -&gt; CM</li><li>Therefore adding the above into tracking array can enhance direct convertion</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;leetcode-trial-q12-integer-to-roman&quot;&gt;LeetCode trial - Q12 (Integer to Roman)&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;2020-06-25&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://
      
    
    </summary>
    
    
      <category term="Coding practices" scheme="http://yoursite.com/categories/Coding-practices/"/>
    
    
      <category term="Leet code" scheme="http://yoursite.com/tags/Leet-code/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode trial (Q3)</title>
    <link href="http://yoursite.com/2020/09/24/Daily%20LEET%20(Q3)/"/>
    <id>http://yoursite.com/2020/09/24/Daily%20LEET%20(Q3)/</id>
    <published>2020-09-24T12:43:10.000Z</published>
    <updated>2021-03-26T13:41:13.565Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="daily-leet-q3-longest-substring-without-repeating-characters">Daily LEET - Q3 (Longest Substring Without Repeating Characters)</span></h1><p>2020-06-24</p><p><a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/" target="_blank" rel="noopener">Link to Question</a></p><ul><li>Objective: Given a string, find the length of the longest substring without repeating characters.</li><li>Level of difficulty: Medium</li><li>Language used: C++</li></ul><h2><span id="result">Result</span></h2><ul><li>Runtime:  12 ms <em>(faster than 91.25%)</em> <em>For reference only</em></li><li>Memory Usage:  7.1 MB <em>(less than 82.90%)</em> <em>For reference only</em></li></ul><h2><span id="code">Code</span></h2><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span>string s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token operator">==</span><span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> head<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> LongestSize<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> CurrentSize<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">bool</span> breaked<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>               breaked<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            CurrentSize<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>head<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    head<span class="token operator">=</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                    breaked<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>breaked<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    CurrentSize<span class="token operator">=</span>CurrentSize<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>CurrentSize<span class="token operator">></span>LongestSize<span class="token punctuation">)</span>                LongestSize<span class="token operator">=</span>CurrentSize<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">return</span> LongestSize<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2><span id="notes">Notes</span></h2><ul><li>O(n^2)?</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;daily-leet-q3-longest-substring-without-repeating-characters&quot;&gt;Daily LEET - Q3 (Longest Substring Without Repeating Characters)
      
    
    </summary>
    
    
      <category term="Coding practices" scheme="http://yoursite.com/categories/Coding-practices/"/>
    
    
      <category term="Leet code" scheme="http://yoursite.com/tags/Leet-code/"/>
    
  </entry>
  
  <entry>
    <title>Japanese learning</title>
    <link href="http://yoursite.com/2020/09/13/Japanese%20learning/"/>
    <id>http://yoursite.com/2020/09/13/Japanese%20learning/</id>
    <published>2020-09-13T12:56:53.000Z</published>
    <updated>2021-03-26T14:00:01.854Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="grammar">Grammar</span></h2><h2><span id="words-amp-phrases">Words &amp; Phrases</span></h2><h2><span id="jlpt">JLPT</span></h2><h3><span id="n5">N5</span></h3><h3><span id="n4">N4</span></h3><h3><span id="n3">N3</span></h3><h3><span id="n2">N2</span></h3><h3><span id="n1">N1</span></h3><h2><span id="resources">Resources</span></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;grammar&quot;&gt;Grammar&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span id=&quot;words-amp-phrases&quot;&gt;Words &amp;amp; Phrases&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span id=&quot;jlpt&quot;&gt;JLPT&lt;/span&gt;&lt;/h
      
    
    </summary>
    
    
    
      <category term="Japanese" scheme="http://yoursite.com/tags/Japanese/"/>
    
      <category term="language" scheme="http://yoursite.com/tags/language/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode trial (Q13)</title>
    <link href="http://yoursite.com/2020/07/24/Daily%20LEET%20(Q13)/"/>
    <id>http://yoursite.com/2020/07/24/Daily%20LEET%20(Q13)/</id>
    <published>2020-07-24T04:29:20.666Z</published>
    <updated>2021-03-26T13:41:24.874Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="daily-leet-q13-roman-to-integer">Daily LEET - Q13 (Roman to Integer)</span></h1><p>2020-06-24</p><p><a href="https://leetcode.com/problems/roman-to-integer/" target="_blank" rel="noopener">Link to Question</a></p><ul><li>Objective: To convert given roman numeral string into an integer</li><li>Level of difficulty: Easy</li><li>Language used: C++</li></ul><h2><span id="result">Result</span></h2><ul><li>Runtime: 4 ms <em>(faster than 98.05%)</em> <em>For reference only</em></li><li>Memory Usage: 6.1 MB <em>(less than 61.77% of C++)</em> <em>For reference only</em></li></ul><h2><span id="code">Code</span></h2><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">romanToDigit</span><span class="token punctuation">(</span><span class="token keyword">char</span> s<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">switch</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">'I'</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'V'</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token number">5</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'X'</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'L'</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token number">50</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'C'</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token number">100</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'D'</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token number">500</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'M'</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token number">1000</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> <span class="token function">romanToInt</span><span class="token punctuation">(</span>string s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> store<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> last<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            temp<span class="token operator">=</span><span class="token function">romanToDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            store<span class="token operator">=</span>store<span class="token operator">+</span>temp<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token operator">></span>last<span class="token punctuation">)</span>                store<span class="token operator">=</span>store<span class="token number">-2</span><span class="token operator">*</span>last<span class="token punctuation">;</span>            last<span class="token operator">=</span>temp<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> store<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2><span id="notes">Notes</span></h2><ul><li>Can add up value of letters first then substract the double of the previous letter if the following letter is larger than the previous one</li><li>Reduce memory usage?</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;daily-leet-q13-roman-to-integer&quot;&gt;Daily LEET - Q13 (Roman to Integer)&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;2020-06-24&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode
      
    
    </summary>
    
    
      <category term="Coding practices" scheme="http://yoursite.com/categories/Coding-practices/"/>
    
    
      <category term="Leet code" scheme="http://yoursite.com/tags/Leet-code/"/>
    
  </entry>
  
  <entry>
    <title>Hello HEXO</title>
    <link href="http://yoursite.com/2020/06/18/hello-world/"/>
    <id>http://yoursite.com/2020/06/18/hello-world/</id>
    <published>2020-06-18T13:24:36.000Z</published>
    <updated>2020-06-20T05:46:03.171Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="hello-hexo">Hello HEXO</span></h2><p>A tiny documentation to remind myself the basics of HEXO.</p><h2><span id="hexo">HEXO</span></h2><p>The following commands should be used while pointing the root folder of “blog”.</p><h3><span id="basics">Basics</span></h3><ul><li>blog/_config.yml : Global info of user</li><li>blog/public : Generated website documents</li></ul><h3><span id="blog_configyml">blog/_config.yml</span></h3><ul><li>theme : Change your desired theme to be the same as the name of the folder</li></ul><h3><span id="create-a-new-post">Create a new post</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3><span id="generate-static-files">Generate static files</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo generateor$ hexo g</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3><span id="run-server">Run server</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo serveror$ hexo s</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3><span id="local-address">Local address</span></h3><pre><code>http://localhost:4000</code></pre><h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h2><span id="hexo-nexteditor">HEXO - NextEditor</span></h2><p>A useful editor interface for “Next” themes.</p><h3><span id="editor-address">Editor address</span></h3><pre><code>http://localhost:2048</code></pre><h3><span id="run-editor-server">Run Editor server</span></h3><p>This commend should be used while pointing the root folder of hexo-editor.</p><p>i.e. blog\themes\hexo-editor&gt;</p><pre><code>npm start</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;hello-hexo&quot;&gt;Hello HEXO&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;A tiny documentation to remind myself the basics of HEXO.&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;hexo&quot;&gt;HEXO&lt;/s
      
    
    </summary>
    
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>Testing (Functions)</title>
    <link href="http://yoursite.com/2020/06/18/Untitled/"/>
    <id>http://yoursite.com/2020/06/18/Untitled/</id>
    <published>2020-06-18T01:52:05.630Z</published>
    <updated>2020-06-24T14:45:37.881Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/haru.jpg" alt="HARU"></p><p>Hello World</p><p>Testing image import, tags, categories.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/haru.jpg&quot; alt=&quot;HARU&quot;&gt;&lt;/p&gt;
&lt;p&gt;Hello World&lt;/p&gt;
&lt;p&gt;Testing image import, tags, categories.&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Anime" scheme="http://yoursite.com/categories/Anime/"/>
    
    
      <category term="Anime" scheme="http://yoursite.com/tags/Anime/"/>
    
  </entry>
  
</feed>
